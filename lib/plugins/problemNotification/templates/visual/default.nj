{%- set startingEvent = problem.rankedEvents | last -%}
{%- set currentEvent = problem.rankedEvents | first -%}
{%- set eventsDisplayed = 0 -%}
{%- set rootCauseCount = 0 -%}
{
    "text": "{% if problem.status == 'OPEN' %}{{ [
        'I just wanted to let know that the following problem was detected',
        'I just wanted to give you a quick heads up that the follow problem was detected'
    ] | random }}{% else %}{{ [
        'Good news, the following problem has been resolved',
        'Great, the following problem has been resolved',
        'Nice!  The following problem has been resolved'
    ] | random }}{% endif %}:",
    "attachments": [
        {
            "fallback": "{{ currentEvent.eventType | toTitleCase | replace("A ", "") }}\nImpacted: {{ currentEvent | friendlyEntityName("visual") }} \n{{ problem.impactLevel | capitalize }}\nInitial Event: {{ startingEvent.eventType | friendlyEventFirstAlias | toTitleCase | replace("A ", "") }}\nStatus: {% if problem.status == 'OPEN' %}Unresolved{% else %}Resolved{% endif %}",
            "color": "{% if problem.status == 'OPEN' %}#dc172a{% else %}#7dc540{% endif %}",
            "title": "{{ currentEvent.eventType | friendlyEventFirstAlias | toTitleCase | replace("A ", "") }}",
            "title_link": "{{problem | buildProblemUrl }}",
            "fields": [
                {
                    "title": "Impacted",
                    "value": "{{ currentEvent | friendlyEntityName("visual") }} \n{{ problem.impactLevel | capitalize }}",
                    "short": "true"
                },
                {
                    "title": "Initial Event",
                    "value": "{{ startingEvent.eventType | friendlyEventFirstAlias | toTitleCase | replace("A ", "") }}",
                    "short": "true"
                },
                {
                    "title": "Time Frame",
                    "value": "{{ {startTime: problem.startTime, stopTime: problem.endTime} | friendlyTimeRange(user, true, "visual") }}",
                    "short": "true"
                },
                {
                    "title": "Status",
                    "value": "{% if problem.status == 'OPEN' %}Unresolved{% else %}Resolved{% endif %}",
                    "short": "true"
                }
            ]
        }
        {% for event in problem.rankedEvents %}
            {% if event.isRootCause %}
                {% set rootCauseCount = rootCauseCount + 1 %}
            {% endif %}
        {%- endfor %}
        {% for event in problem.rankedEvents %}
            {% if event.isRootCause and eventsDisplayed < 3 %}
                {% if eventsDisplayed == 0 %}
                    ,{
                        "pretext": "{% if rootCauseCount > 1 %}Top root cause events{% else %}Root cause event{% endif %}:"
                    }
                {% endif %}
                ,{% include "lib/plugins/shared-templates/event-summary/visual/default.nj" %}
               {% set eventsDisplayed = eventsDisplayed + 1 %}
            {% endif %}
        {%- endfor %}
    ]
}