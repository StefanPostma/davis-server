#!/usr/bin/env node

'use strict';

const BbPromise = require('bluebird');
const logError = require('../lib/classes/Utils').logError;

process.on('unhandledRejection', e => logError(e));
process.noDeprecation = true;

const RoutingDebug = require('../routingDebug');
const DateDebug = require('../dateDebug');

(() => BbPromise.resolve().then(() => {
  // require here so that if anything goes wrong during require,
  // it will be caught.
  const Davis = require('../lib/Davis'); // eslint-disable-line global-require

  const davis = new Davis({ logLevel: 'debug' });

  return davis.init()
    .then(() => davis.pluginManager.addPlugin(RoutingDebug))
    .then(() => davis.pluginManager.addPlugin(DateDebug))
    .then(() => davis.run())
    .then(() => davis.startSlack());
}).catch(e => logError(e, true)))();
