/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../src/app/wizard/wizard.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '../../../../src/app/shared/config/config.module';
import * as import6 from '@angular/router/src/router_module';
import * as import7 from '@angular/common/src/localization';
import * as import8 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import9 from '../../../../src/app/shared/config/config.service';
import * as import10 from '@angular/core/src/di/injector';
import * as import11 from './wizard-base/wizard-base.component.ngfactory';
import * as import12 from '../../../../src/app/wizard/wizard-base/wizard-base.component';
import * as import13 from '../../../../src/app/auth/auth-guard/wizard-guard.service';
import * as import14 from '@angular/core/src/i18n/tokens';
import * as import15 from '@angular/router/src/router_config_loader';
class WizardModuleInjector extends import0.NgModuleInjector<import1.WizardModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _FormsModule_2:import4.FormsModule;
  _ConfigModule_3:import5.ConfigModule;
  _RouterModule_4:import6.RouterModule;
  _WizardModule_5:import1.WizardModule;
  __LOCALE_ID_6:any;
  __NgLocalization_7:import7.NgLocaleLocalization;
  __RadioControlRegistry_8:import8.RadioControlRegistry;
  __ConfigService_9:import9.ConfigService;
  __ROUTES_10:any[];
  constructor(parent:import10.Injector) {
    super(parent,[import11.WizardBaseComponentNgFactory],([] as any[]));
  }
  get _LOCALE_ID_6():any {
    if ((this.__LOCALE_ID_6 == null)) { (this.__LOCALE_ID_6 = 'en-US'); }
    return this.__LOCALE_ID_6;
  }
  get _NgLocalization_7():import7.NgLocaleLocalization {
    if ((this.__NgLocalization_7 == null)) { (this.__NgLocalization_7 = new import7.NgLocaleLocalization(this._LOCALE_ID_6)); }
    return this.__NgLocalization_7;
  }
  get _RadioControlRegistry_8():import8.RadioControlRegistry {
    if ((this.__RadioControlRegistry_8 == null)) { (this.__RadioControlRegistry_8 = new import8.RadioControlRegistry()); }
    return this.__RadioControlRegistry_8;
  }
  get _ConfigService_9():import9.ConfigService {
    if ((this.__ConfigService_9 == null)) { (this.__ConfigService_9 = new import9.ConfigService()); }
    return this.__ConfigService_9;
  }
  get _ROUTES_10():any[] {
      if ((this.__ROUTES_10 == null)) { (this.__ROUTES_10 = [[
        {
          path: '',
          redirectTo: '/wizard',
          pathMatch: 'full'
        }
        ,
        {
          path: 'wizard',
          component: import12.WizardBaseComponent,
          canActivate: [import13.WizardGuard]
        }

      ]
    ]); }
    return this.__ROUTES_10;
  }
  createInternal():import1.WizardModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._FormsModule_2 = new import4.FormsModule();
    this._ConfigModule_3 = new import5.ConfigModule();
    this._RouterModule_4 = new import6.RouterModule(this.parent.get(import6.ROUTER_FORROOT_GUARD,(null as any)));
    this._WizardModule_5 = new import1.WizardModule();
    return this._WizardModule_5;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.FormsModule)) { return this._FormsModule_2; }
    if ((token === import5.ConfigModule)) { return this._ConfigModule_3; }
    if ((token === import6.RouterModule)) { return this._RouterModule_4; }
    if ((token === import1.WizardModule)) { return this._WizardModule_5; }
    if ((token === import14.LOCALE_ID)) { return this._LOCALE_ID_6; }
    if ((token === import7.NgLocalization)) { return this._NgLocalization_7; }
    if ((token === import8.RadioControlRegistry)) { return this._RadioControlRegistry_8; }
    if ((token === import9.ConfigService)) { return this._ConfigService_9; }
    if ((token === import15.ROUTES)) { return this._ROUTES_10; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const WizardModuleNgFactory:import0.NgModuleFactory<import1.WizardModule> = new import0.NgModuleFactory(WizardModuleInjector,import1.WizardModule);