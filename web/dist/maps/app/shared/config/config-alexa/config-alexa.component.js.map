{"version":3,"sources":["app/shared/config/config-alexa/config-alexa.component.ts"],"names":["core_1","require","config_service_1","davis_service_1","_","ConfigAlexaComponent","iDavis","iConfig","this","submitted","submitButton","isDirty","prototype","validate","values","user","alexa_ids","isEqual","original","doSubmit","_this","connectAlexa","then","result","config","success","SelectView","error","console","log","ngOnInit","document","getElementsByName","focus","__decorate","Component","moduleId","module","id","selector","templateUrl","DavisService","ConfigService","exports"],"mappings":"sgBAAAA,OAAAC,QAAA,iBAGAC,iBAAAD,QAAA,qBACAE,gBAAAF,QAAA,uBACAG,EAAAH,QAAA,UAOaI,qBAAoB,WAK/B,QAAAA,GACSC,EACAC,GADAC,KAAAF,OAAAA,EACAE,KAAAD,QAAAA,EANTC,KAAAC,WAAqB,EACrBD,KAAAE,aAAwBF,KAAKF,OAAe,SAAI,OAAS,OACzDE,KAAAG,SAAmB,EAqCrB,MA/BEN,GAAAO,UAAAC,SAAA,WACML,KAAKF,OAAOQ,OAAOC,KAAKC,UAC1BR,KAAKE,aAAe,WAEpBF,KAAKE,aAAe,OAEtBF,KAAKG,SAAWP,EAAEa,QAAQT,KAAKF,OAAOQ,OAAOC,KAAMP,KAAKF,OAAOQ,OAAOI,SAASH,OAGjFV,EAAAO,UAAAO,SAAA,WAAA,GAAAC,GAAAZ,IACMA,MAAKF,OAAOQ,OAAOC,KAAKC,WAC1BR,KAAKE,aAAe,YACpBF,KAAKF,OAAOe,eACTC,KAAK,SAAAC,GACJH,EAAKd,OAAOkB,OAAc,MAAEC,SAAU,EACtCL,EAAKb,QAAQmB,WAAW,UAE1B,SAAAC,GACEC,QAAQC,IAAIF,GACZP,EAAKd,OAAOkB,OAAc,MAAEC,SAAU,KAG1CjB,KAAKD,QAAQmB,WAAW,SAG1BlB,KAAKC,WAAY,GAGnBJ,EAAAO,UAAAkB,SAAA,WACEC,SAASC,kBAAkB,SAAS,GAAGC,SAE3C5B,IAxCaA,sBAAoB6B,YALhClC,OAAAmC,WACCC,SAAUC,OAAOC,GACjBC,SAAU,eACVC,YAAa,kEAQIrC,gBAAAsC,aACCvC,iBAAAwC,iBAPPrC,sBAAAsC,QAAAtC,qBAAAA","file":"../../../../../app/shared/config/config-alexa/config-alexa.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n// Services\nimport { ConfigService } from '../config.service';\nimport { DavisService }  from '../../davis.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'config-alexa',\n  templateUrl: './config-alexa.component.html',\n})\nexport class ConfigAlexaComponent implements OnInit {\n  submitted: boolean = false;\n  submitButton: string = (this.iDavis.isWizard) ? 'Skip' : 'Save';\n  isDirty: boolean = false;\n\n  constructor(\n    public iDavis: DavisService,\n    public iConfig: ConfigService) { }\n\n  validate() {\n    if (this.iDavis.values.user.alexa_ids) {\n      this.submitButton = 'Continue';\n    } else {\n      this.submitButton = 'Skip';\n    }\n    this.isDirty = !_.isEqual(this.iDavis.values.user, this.iDavis.values.original.user);\n  }\n\n  doSubmit() {\n    if (this.iDavis.values.user.alexa_ids) {\n      this.submitButton = 'Saving...';\n      this.iDavis.connectAlexa()\n        .then(result => {\n          this.iDavis.config['alexa'].success = true;\n          this.iConfig.SelectView('slack');\n        },\n        error => {\n          console.log(error);\n          this.iDavis.config['alexa'].success = false;\n        });\n    } else {\n      this.iConfig.SelectView('slack');\n    }\n\n    this.submitted = true;\n  }\n  \n  ngOnInit() {\n    document.getElementsByName('alexa')[0].focus();\n  }\n}\n"]}