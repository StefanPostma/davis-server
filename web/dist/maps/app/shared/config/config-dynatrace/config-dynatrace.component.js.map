{"version":3,"sources":["app/shared/config/config-dynatrace/config-dynatrace.component.ts"],"names":["core_1","require","config_service_1","davis_service_1","_","ConfigDynatraceComponent","iDavis","iConfig","this","submitted","submitButton","isDirty","prototype","doSubmit","_this","connectDynatrace","then","result","success","validateDynatrace","res","config","SelectView","error","message","err","catch","validate","isEqual","values","dynatrace","original","keySubmit","keyCode","ngOnInit","document","getElementsByName","focus","__decorate","Component","moduleId","module","id","selector","templateUrl","DavisService","ConfigService","exports"],"mappings":"sgBAAAA,OAAAC,QAAA,iBAGAC,iBAAAD,QAAA,qBACAE,gBAAAF,QAAA,uBACAG,EAAAH,QAAA,UAOaI,yBAAwB,WAMnC,QAAAA,GACSC,EACAC,GADAC,KAAAF,OAAAA,EACAE,KAAAD,QAAAA,EANTC,KAAAC,WAAqB,EACrBD,KAAAE,aAAwBF,KAAKF,OAAe,SAAI,WAAa,OAC7DE,KAAAG,SAAmB,EAgErB,MA1DEN,GAAAO,UAAAC,SAAA,WAAA,GAAAC,GAAAN,IACEA,MAAKE,aAAe,YACpBF,KAAKF,OAAOS,mBACPC,KAAK,SAAAC,GACAA,EAAOC,QACTJ,EAAKR,OAAOa,oBACXH,KAAK,SAAAI,GACAA,EAAIF,SACNJ,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKP,QAAQe,WAAW,WAExBR,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQH,EAAII,QAC5CV,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,SAG9D,SAAAmB,GACEX,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQ,6CACxCT,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,SAE3DoB,MAAM,SAAAD,GACLX,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQ,6CACxCT,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,UAG5DQ,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQN,EAAOO,QAC/CV,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,SAG9D,SAAAiB,GACET,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQ,6CACxCT,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,SAE3DoB,MAAM,SAAAD,GACLX,EAAKR,OAAOe,OAAkB,UAAEH,SAAU,EAC1CJ,EAAKR,OAAOe,OAAkB,UAAEE,MAAQ,6CACxCT,EAAKJ,aAAgBI,EAAKR,OAAe,SAAI,WAAa,SAEhEE,KAAKC,WAAY,GAGnBJ,EAAAO,UAAAe,SAAA,WACEnB,KAAKG,SAAWP,EAAEwB,QAAQpB,KAAKF,OAAOuB,OAAOC,UAAWtB,KAAKF,OAAOuB,OAAOE,SAASD,YAGtFzB,EAAAO,UAAAoB,UAAA,SAAUC,GACQ,KAAZA,GACFzB,KAAKK,YAITR,EAAAO,UAAAsB,SAAA,WACEC,SAASC,kBAAkB,OAAO,GAAGC,SAEzChC,IApEaA,0BAAwBiC,YALpCtC,OAAAuC,WACCC,SAAUC,OAAOC,GACjBC,SAAU,mBACVC,YAAa,sEASIzC,gBAAA0C,aACC3C,iBAAA4C,iBARPzC,0BAAA0C,QAAA1C,yBAAAA","file":"../../../../../app/shared/config/config-dynatrace/config-dynatrace.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n// Services\nimport { ConfigService } from '../config.service';\nimport { DavisService } from '../../davis.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'config-dynatrace',\n  templateUrl: './config-dynatrace.component.html',\n})\nexport class ConfigDynatraceComponent implements OnInit {\n\n  submitted: boolean = false;\n  submitButton: string = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n  isDirty: boolean = false;\n    \n  constructor(\n    public iDavis: DavisService,\n    public iConfig: ConfigService) { }\n  \n  doSubmit() {\n    this.submitButton = 'Saving...';\n    this.iDavis.connectDynatrace()\n        .then(result => {\n          if (result.success) {\n            this.iDavis.validateDynatrace()\n            .then(res => {\n              if (res.success) {\n                this.iDavis.config['dynatrace'].success = true;\n                this.iConfig.SelectView('alexa');\n              } else {\n                this.iDavis.config['dynatrace'].success = false;\n                this.iDavis.config['dynatrace'].error = res.message;\n                this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n              }\n            },\n            err => {\n              this.iDavis.config['dynatrace'].success = false;\n              this.iDavis.config['dynatrace'].error = 'Sorry an error occurred, please try again.';\n              this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n            })\n            .catch(err => {\n              this.iDavis.config['dynatrace'].success = false;\n              this.iDavis.config['dynatrace'].error = 'Sorry an error occurred, please try again.';\n              this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n            });\n          } else {\n            this.iDavis.config['dynatrace'].success = false;\n            this.iDavis.config['dynatrace'].error = result.message;\n            this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n          }\n        },\n        error => {\n          this.iDavis.config['dynatrace'].success = false;\n          this.iDavis.config['dynatrace'].error = 'Sorry an error occurred, please try again.';\n          this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n        })\n        .catch(err => {\n          this.iDavis.config['dynatrace'].success = false;\n          this.iDavis.config['dynatrace'].error = 'Sorry an error occurred, please try again.';\n          this.submitButton = (this.iDavis.isWizard) ? 'Continue' : 'Save';\n        });\n    this.submitted = true;\n  }\n  \n  validate() {\n    this.isDirty = !_.isEqual(this.iDavis.values.dynatrace, this.iDavis.values.original.dynatrace);\n  }\n  \n  keySubmit(keyCode: any) {\n    if (keyCode === 13) {\n      this.doSubmit();\n    }\n  }\n  \n  ngOnInit() {\n    document.getElementsByName('url')[0].focus();\n  }\n}\n"]}