{"version":3,"sources":["app/auth/auth-login/auth-login.component.ts"],"names":["core_1","require","router_1","davis_service_1","AuthLoginComponent","iDavis","router","this","submitted","loginError","password","submitButton","titleGlobal","prototype","login","form","_this","values","authenticate","email","value","getJwtToken","then","result","success","token","isAuthenticated","isAdmin","admin","sessionStorage","removeItem","setItem","navigate","message","__decorate","Component","moduleId","module","id","selector","templateUrl","DavisService","Router","exports"],"mappings":"sgBAUAA,OAAAC,QAAA,iBACAC,SAAAD,QAAA,mBACAE,gBAAAF,QAAA,8BAWaG,mBAAkB,WAU7B,QAAAA,GAAmBC,EAA6BC,GAA7BC,KAAAF,OAAAA,EAA6BE,KAAAD,OAAAA,EARhDC,KAAAC,WAAqB,EACrBD,KAAAE,WAAqB,KACrBF,KAAAG,SAAmB,GACnBH,KAAAI,aAAuB,UAMrBJ,KAAKF,OAAOO,YAAc,GAkC9B,MA5BER,GAAAS,UAAAC,MAAA,SAAMC,GAAN,GAAAC,GAAAT,IACEA,MAAKC,WAAY,EACjBD,KAAKI,aAAe,gBACpBJ,KAAKF,OAAOY,OAAOC,aAAaC,MAAQJ,EAAKK,MAAMD,MACnDZ,KAAKF,OAAOY,OAAOC,aAAaR,SAAWK,EAAKK,MAAMV,SACtDH,KAAKF,OAAOgB,cACTC,KAAK,SAAAC,GACAA,EAAOC,SACTR,EAAKL,aAAe,UACpBK,EAAKP,WAAa,KAClBO,EAAKX,OAAOoB,MAAQF,EAAOE,MAC3BT,EAAKX,OAAOqB,iBAAkB,EAC9BV,EAAKX,OAAOsB,QAAUJ,EAAOK,MAC7BC,eAAeC,WAAW,SAC1BD,eAAeC,WAAW,SAC1BD,eAAeC,WAAW,WAC1BD,eAAeE,QAAQ,QAAShB,EAAKK,MAAMD,OAC3CU,eAAeE,QAAQ,QAASR,EAAOE,OACvCI,eAAeE,QAAQ,UAAWR,EAAOK,OACzCZ,EAAKV,OAAO0B,UAAU,qBAEtBhB,EAAKL,aAAe,UACpBK,EAAKP,WAAac,EAAOU,QACzBjB,EAAKN,SAAW,OAK1BN,IA7CaA,oBAAkB8B,YAN9BlC,OAAAmC,WACCC,SAAaC,OAAOC,GACpBC,SAAa,aACbC,YAAa,gEAacrC,gBAAAsC,aAA6BvC,SAAAwC,UAV7CtC,oBAAAuC,QAAAvC,mBAAAA","file":"../../../../app/auth/auth-login/auth-login.component.js","sourcesContent":["// ============================================================================\n// Auth Login - Component\n//\n// This component creates a login form for authentication\n// ============================================================================\n\n// ----------------------------------------------------------------------------\n// Imports\n// ----------------------------------------------------------------------------\n// Angular\nimport { Component } from '@angular/core';\nimport { Router }    from '@angular/router';\nimport { DavisService } from '../../shared/davis.service';\n\n// ----------------------------------------------------------------------------\n// Class\n// ----------------------------------------------------------------------------\n@Component({\n  moduleId:    module.id,\n  selector:    'auth-login',\n  templateUrl: './auth-login.component.html',\n})\n\nexport class AuthLoginComponent  {\n  // Initialize form submission\n  submitted: boolean = false;\n  loginError: string = null;\n  password: string = '';\n  submitButton: string = 'Sign in';\n\n  // ------------------------------------------------------\n  // Inject services\n  // ------------------------------------------------------\n  constructor(public iDavis: DavisService, public router: Router) {\n    this.iDavis.titleGlobal = '';\n  }\n\n  // ------------------------------------------------------\n  // Initialize component\n  // ------------------------------------------------------\n  login(form: any) {\n    this.submitted = true;\n    this.submitButton = 'Signing in...';\n    this.iDavis.values.authenticate.email = form.value.email;\n    this.iDavis.values.authenticate.password = form.value.password;\n    this.iDavis.getJwtToken()\n      .then(result => {\n        if (result.success) {\n          this.submitButton = 'Sign in';\n          this.loginError = null;\n          this.iDavis.token = result.token;\n          this.iDavis.isAuthenticated = true;\n          this.iDavis.isAdmin = result.admin;\n          sessionStorage.removeItem('email');\n          sessionStorage.removeItem('token');\n          sessionStorage.removeItem('isAdmin');\n          sessionStorage.setItem('email', form.value.email);\n          sessionStorage.setItem('token', result.token);\n          sessionStorage.setItem('isAdmin', result.admin);\n          this.router.navigate(['/configuration']);\n        } else {\n          this.submitButton = 'Sign in';\n          this.loginError = result.message;\n          this.password = '';\n        }\n      });\n  }\n\n}\n"]}