"use strict";var __decorate=this&&this.__decorate||function(e,i,s,a){var t,n=arguments.length,r=n<3?i:null===a?a=Object.getOwnPropertyDescriptor(i,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,i,s,a);else for(var o=e.length-1;o>=0;o--)(t=e[o])&&(r=(n<3?t(r):n>3?t(i,s,r):t(i,s))||r);return n>3&&r&&Object.defineProperty(i,s,r),r},__metadata=this&&this.__metadata||function(e,i){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,i)},core_1=require("@angular/core"),router_1=require("@angular/router"),config_service_1=require("../../shared/config/config.service"),davis_service_1=require("../../shared/davis.service"),_=require("lodash"),ConfigurationBaseComponent=function(){function e(e,i,s){this.router=e,this.iConfig=i,this.iDavis=s,this.showConfigureButton=!1}return e.prototype.ngOnInit=function(){var e=this;sessionStorage.getItem("wizard-finished")?(sessionStorage.removeItem("wizard-finished"),this.iDavis.titleGlobal="Great! It looks like we're all set now.",this.showConfigureButton=!0):this.iDavis.titleGlobal="Configure Davis",this.iDavis.config.user.success=null,this.iDavis.config.user.error=null,this.iDavis.config.dynatrace.success=null,this.iDavis.config.dynatrace.error=null,this.iDavis.config.slack.success=null,this.iDavis.config.slack.error=null,this.iDavis.helpLinkText="Help for these settings",this.iDavis.getDavisUser().then(function(i){i.success?(e.iDavis.values.user=i.user,i.user.name?(i.user.name.first||(e.iDavis.values.user.name.first=""),i.user.name.last||(e.iDavis.values.user.name.last="")):e.iDavis.values.user.name={first:"",last:""},e.iDavis.values.original.user=_.cloneDeep(e.iDavis.values.user)):e.iDavis.config.user.error=i.message}).catch(function(i){e.iDavis.config.user.error=i.message,i.includes("invalid token")&&e.iDavis.logOut()}),this.iDavis.getDynatrace().then(function(i){i.success?(e.iDavis.values.dynatrace=i.dynatrace,e.iDavis.values.original.dynatrace=_.cloneDeep(e.iDavis.values.dynatrace)):e.iDavis.config.dynatrace.error=i.message}).catch(function(i){e.iDavis.config.dynatrace.error=i.message,i.includes("invalid token")&&e.iDavis.logOut()}),this.iDavis.getSlack().then(function(i){i.success?(e.iDavis.values.slack=i.slack,e.iDavis.values.slack.enabled=!0,e.iDavis.values.original.slack=_.cloneDeep(e.iDavis.values.slack)):e.iDavis.config.slack.error=i.message}).catch(function(i){e.iDavis.config.slack.error=i.message,i.includes("invalid token")&&e.iDavis.logOut()})},e}();ConfigurationBaseComponent=__decorate([core_1.Component({moduleId:module.id,selector:"configuration-base",templateUrl:"./configuration-base.component.html"}),__metadata("design:paramtypes",[router_1.Router,config_service_1.ConfigService,davis_service_1.DavisService])],ConfigurationBaseComponent),exports.ConfigurationBaseComponent=ConfigurationBaseComponent;
//# sourceMappingURL=../../../maps/app/configuration/configuration-base/configuration-base.component.js.map
